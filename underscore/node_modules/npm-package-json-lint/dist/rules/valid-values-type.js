var p=Object.create;var s=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var b=(t,r)=>{for(var e in r)s(t,e,{get:r[e],enumerable:!0})},d=(t,r,e,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of f(r))!h.call(t,n)&&n!==e&&s(t,n,{get:()=>r[n],enumerable:!(o=u(r,n))||o.enumerable});return t};var g=(t,r,e)=>(e=t!=null?p(y(t)):{},d(r||!t||!t.__esModule?s(e,"default",{value:t,enumerable:!0}):e,t)),v=t=>d(s({},"__esModule",{value:!0}),t);var w={};b(w,{lint:()=>P,minItems:()=>O,ruleType:()=>I});module.exports=v(w);var i=g(require("chalk")),m=g(require("log-symbols"));var a=class{constructor(r,e,o,n){this.lintId=r,this.severity=e,this.node=o,this.lintMessage=n}toString(){let r=this.severity==="error"?m.default.error:m.default.warning,e=i.default.cyan.bold(this.lintId),o=i.default.magenta.bold(this.node),n=this.severity==="error"?i.default.red.bold(this.lintMessage):i.default.yellow(this.lintMessage);return`${r} ${e} - node: ${o} - ${n}`}};var c=(t,r,e,o)=>t.hasOwnProperty(r)?o.includes(e):!0;var x="valid-values-type",l="type",I="array",O=1,P=(t,r,e)=>c(t,l,t[l],e)?null:new a(x,r,l,`Invalid value for type. Current value is ${t[l]}. Valid values include: ${e.join(", ")}.`);0&&(module.exports={lint,minItems,ruleType});
